#---输入指令:1:	(I,	_,	_,	a	)
in R1			#输入一个值
movi 0 		#将变量的内存地址值赋值到R0
movb R0,R1 		#将R1的值赋值给变量所在的内存地址
#---输入指令:2:	(I,	_,	_,	b	)
in R1			#输入一个值
movi 1 		#将变量的内存地址值赋值到R0
movb R0,R1 		#将R1的值赋值给变量所在的内存地址
#---大于跳转指令:3:	(J>,	a,	b,	5	)
movi 0 			#大于跳转指令，变量a的内存地址放入R0
movc R1,R0 		#大于跳转指令，变量a从内存地址R0拷贝至R1
movi 1 			#大于跳转指令，变量b的内存地址放入R0
movc R2,R0 		#大于跳转指令，变量b从内存地址R0拷贝至R2
sub R1,R2			#R1减去R2，同时设置G值
movi 22			#绝对偏移地址
mova R3,R0 		#设置跳转地址
JG 			#大于则跳转
#---无条件跳转指令:4:	(J,	_,	_,	7	)
#直接跳转指令
movi 29			#绝对偏移地址
mova R3,R0 		#设置跳转地址
jmp 		#准备跳转
#---赋值指令:5:	(=,	a,	_,	c	)
movi 0 			#将变量b的内存地址值赋值到R0
movc R1,R0		#从内存中取出b的值到R1
movi 2			#将变量a的内存地址值赋值到R0
movb R0,R1 		#将R1的值（即b）赋值给a所在的内存地址
#---无条件跳转指令:6:	(J,	_,	_,	8	)
#直接跳转指令
movi 33			#绝对偏移地址
mova R3,R0 		#设置跳转地址
jmp 		#准备跳转
#---赋值指令:7:	(=,	b,	_,	c	)
movi 1 			#将变量b的内存地址值赋值到R0
movc R1,R0		#从内存中取出b的值到R1
movi 2			#将变量a的内存地址值赋值到R0
movb R0,R1 		#将R1的值（即b）赋值给a所在的内存地址
#---输出指令:8:	(O,	_,	_,	c	)
movi 2			#将变量的内存地址赋值给R0
movc R1,R0		#将变量的值从内存送到寄存器R1
out R1			#输出变量的值
mova R0,R0 		#空指令
halt
